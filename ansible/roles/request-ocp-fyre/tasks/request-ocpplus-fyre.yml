---
- name: Check OCP Existance
  uri:
    url: "{{fyreocpplus_clusterstatusurl}}"
    method: "GET"
    user: "{{ fyreuser }}"
    password: "{{ fyreapikey }}"
    validate_certs: False
  register: ocpexistance
  changed_when: false
  failed_when: false

- name: Create Fyre OCP
  when: ocpexistance.json.status is defined # Status is only defined if cluster does not exist
  block:
  #START BLOCK
  - debug:
      msg: "Cluster was not found so creating new cluster called '{{ clusterName }}'"

  - name: Create Fyre stack
    uri:
      url: "{{fyreocpplus_ocpdeployurl}}"
      method: "POST"
      user: "{{ fyreuser }}"
      password: "{{ fyreapikey }}"
      validate_certs: False
      body_format: "json"
      body:
        name : "{{ clusterName }}"
        ocp_version: "{{ ocpVersion }}"
        platform: "{{ ocpPlatform }}"
        ssh_key: "{{ lookup('file', lookup('env','HOME') + '/.ssh/id_rsa.pub') }}"
        worker:
          - count: "{{ fyre_worker_quantity }}"
            cpu: "{{ fyre_worker_cpu }}"
            memory: "{{ fyre_worker_memory }}"
            additional_disk:
              - "{{ fyre_worker_additional_disk }}"
        master:
          - count: "{{ fyre_master_quantity }}"
            cpu: "{{ fyre_master_cpu }}"
            memory: "{{ fyre_master_memory }}"
    register: fyrestatus
  - name: check fyre status
    fail:
      msg: "{{ fyrestatus }}"
    when: fyrestatus.json.status != 'success'
    changed_when: false

  - pause:
      minutes: 2
  # END BLOCK

- name: check fyrestatus for error
  uri:
    url: "{{fyreocpplus_clusterstatusurl}}"
    method: GET
    user:  "{{ fyreuser }}"
    validate_certs: False
    password: "{{ fyreapikey }}"
  changed_when: false
  register: error_status

- name: check for error status
  fail:
   msg:
   - "{{error_status.json.status}}"
   - "{{error_status.json.details}}"
  when:
  - error_status.json.status is defined
  - (error_status.json.status) == 'error'

- name: check that all fyre nodes have a deployed status
  uri:
    url: "{{fyreocpplus_clusterstatusurl}}"
    method: GET
    user:  "{{ fyreuser }}"
    validate_certs: False
    password: "{{ fyreapikey }}"
    return_content: yes
  changed_when: false
  register: cluster_status_response
  until: (cluster_status_response.status == 200) and (cluster_status_response.json.clusters[0].deployment_status  =="deployed") or (cluster_status_response.json.clusters[0].deployment_status == "error")
  retries: 300
  delay: 20

- name: check for error status after loop check
  fail:
   msg:
   - "{{cluster_status_response.json.status}}"
   - "{{cluster_status_response.json.details}}"
  when:
  - cluster_status_response.json.status is defined
  - (cluster_status_response.json.status) == 'error'

- name: Derive Info from Fyre Api
  set_fact:
    fyre_inf_public_ip: "{{ cluster_status_response.json.clusters[0].vms | selectattr('hostname', 'equalto', fyre_inf_node_name) | map(attribute='ip_address') | list | first }}"

- name: remove new host from localhost known_hosts ip
  command: "ssh-keygen -R {{ fyre_inf_public_ip }}"
  changed_when: false
  # changed_when: false Technically not true but change is not particularly meaningful
  failed_when: false
  delegate_to: localhost
- name: remove new host from localhost known_hosts
  command: "ssh-keygen -R {{ fyre_inf_node_name }}"
  changed_when: false
  # changed_when: false Technically not true but change is not particularly meaningful
  failed_when: false
  delegate_to: localhost
- name: remove new host from localhost known_hosts fqdn
  command: "ssh-keygen -R {{ fyre_inf_node_name }}.fyre.ibm.com"
  changed_when: false
  # changed_when: false Technically not true but change is not particularly meaningful
  failed_when: false
  delegate_to: localhost

- name: Add inf host to group
  add_host:
    name: "{{fyre_inf_public_ip}}"
    groups: "{{ fyre_ocp_inf_group }}"
    ansible_user: "root"
    inf_public_ip: "{{fyre_inf_public_ip}}"
    clusterName: "{{ clusterName }}"
  changed_when: false
