#! groovy

// Standard job properties
def jobProps = [
  buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '', daysToKeepStr: '', numToKeepStr: '50')),
  disableResume(),
  durabilityHint("PERFORMANCE_OPTIMIZED"),
  [$class: 'RebuildSettings', autoRebuild: false, rebuildDisabled: false]
]

def paramsList = [
    string(name: 'stackName', defaultValue: 'changeMyStackName', description: 'name of fyre stack'),
    string(name: 'fyreuser', description: 'username for accessing fyre api'),
    password(name: 'fyreapikey', description: 'fyre api key'),
    string(name: 'db2Archive', defaultValue: 'https://ibm.com/db2/ce.tar.gz',description: 'url of source db2 archive'),
    booleanParam(name: 'enableVNC', defaultValue: false, description: 'configure VNC Server on jmeter host')
  ]
jobProps.push(parameters(paramsList))

properties(jobProps)

timestamps {
  ansiColor('xterm') {
    node ( 'kube_pod_slave' ) {

      //def scmVars = checkout scm
      checkout scm
      stage('Stage 1') {
        sh """
          set +x # hide sensitive info being echo'd to log
          cp ./ansible/request-rhel-db2-fyre-play/examples/inventory ./ansible/request-rhel-db2-fyre-play/; ansible-playbook -i ./ansible/request-rhel-db2-fyre-play/inventory ./ansible/request-rhel-db2-fyre-play/request-rhel-db2-fyre-play.yml -e fyreuser=${params.fyreuser} -e fyreapikey=${params.fyreapikey} -e vnc=${params.enableVNC} -e noLog=false -e db2Archive=${params.javaArchive} -e stackName=${params.stackName}
        """.stripIndent()
      }
   }
  }
}
