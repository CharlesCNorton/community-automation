#! groovy

// Standard job properties
def jobProps = [
  buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '', daysToKeepStr: '', numToKeepStr: '50')),
  disableResume(),
  durabilityHint("PERFORMANCE_OPTIMIZED"),
  [$class: 'RebuildSettings', autoRebuild: false, rebuildDisabled: false]
]

def paramsList = [
    choice(name: 'admin_task', choices: ['start', 'stop'], description: 'Action to apply to cluster.'),
    string(name: 'aws_access_key_id', description: 'Your AWS access key ID, required'),
    password(name: 'aws_secret_access_key', description: 'Your AWS secret access key, required')
  ]
jobProps.push(parameters(paramsList))

properties(jobProps)

timestamps {
  ansiColor('xterm') {
    node ( 'kube_pod_slave' ) {

      checkout scm

      stage('Cluster admin') {
        sh """
          cp ./ansible/ocp-cluster-admin-play/examples/mc_vars.yml ./ansible/ocp-cluster-admin-play/
          cp ./ansible/ocp-cluster-admin-play/examples/inventory ./ansible/ocp-cluster-admin-play/
          ansible-playbook -i ./ansible/ocp-cluster-admin-play/inventory \
          ./ansible/ocp-cluster-admin-play/ocp-cluster-admin-play.yml \
          -e aws_access_key_id=${params.aws_access_key_id} \
          -e aws_secret_access_key=${params.aws_secret_access_key} \
          -e task=${params.admin_task} \
          -e arch="linux"
        """.stripIndent()
      }
   }
  }
}