#! groovy

// Standard job properties
def jobProps = [
  buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '', daysToKeepStr: '', numToKeepStr: '50')),
  disableResume(),
  durabilityHint("PERFORMANCE_OPTIMIZED"),
  [$class: 'RebuildSettings', autoRebuild: false, rebuildDisabled: false]
]

def paramsList = [
    string(name: 'aws_access_key', defaultValue: "", description: 'Your AWS access key'),
    string(name: 'aws_secret_key', defaultValue: "", description: 'Your AWS secret key'),
    string(name: 'AWS_REGION', defaultValue: "us-east-1", description: 'AWS region.'),
    string(name: 'WORKER_COUNT', defaultValue: "3", description: 'Number of worker nodes in pool clusters.'),
    string(name: 'WORKER_VM_SIZE', defaultValue: "m5.2xlarge", description: 'AWS worker node size.'),
    string(name: 'WORKER_VOLUME_SIZE', defaultValue: "256", description: 'AWS worker node volume size.'),
    string(name: 'MASTER_VM_SIZE', defaultValue: "m5.2xlarge", description: 'AWS master node size.'),
    string(name: 'MASTER_VOLUME_SIZE', defaultValue: "256", description: 'AWS master node volume size.'),
    string(name: 'hive_admin', defaultValue: "kubeadmin", description: 'ACM/Hive cluster admin user.'),
    password(name: 'hive_admin_password', description: 'ACM/Hive cluster admin password.'),
    string(name: 'hive_api_url', defaultValue: "api.hive2.purple-chesterfield.com", description: 'ACM/Hive used for pools.'),
    string(name: 'pool_name', defaultValue: "yourpoolname", description: 'The pool name.'),
    string(name: 'pool_namespace', defaultValue: "content-pools", description: 'The pool namespace.'),
    string(name: 'pool_size', defaultValue: "1", description: 'Number of clusters in a the pool.'),
    string(name: 'pool_task',defaultValue: "provision", description: 'provision or delete a pool.'),
    string(name: 'pool_cloud', defaultValue: "aws", description: "Cloud type aws|google|azure|vsphere"),
    string(name: 'pool_basedomain', defaultValue: "purple-chesterfield.com", description: 'Base domain your cluster lives in.'),
    string(name: 'pool_ocp_image', defaultValue: "quay.io/openshift-release-dev/ocp-release:4.6.16-x86_64"),
    string(name: 'pull_secret', defaultValue: "\'NULL\'", description: 'Replace NULL with your pull secret between single quotes.'),
    string(name: 'ssh_public', defaultValue: "\'NULL\'", description: 'Replace NULL with your ssh public key between single quotes.')

  ]
jobProps.push(parameters(paramsList))

properties(jobProps)

timestamps {
  ansiColor('xterm') {
    node ( 'kube_pod_slave' ) {

      checkout scm

      stage('Provicion Pool') {
        sh """
          cp ./ansible/provision-pool-play/examples/common-pool-vars.yml ./ansible/provision-pool-play/
          cp ./ansible/provision-pool-play/examples/${params.pool_cloud}-pool-vars.yml ./ansible/provision-pool-play/
          cp ./ansible/provision-pool-play/examples/inventory ./ansible/provision-pool-play/
          cd ./ansible/provision-pool-play
          echo "What is the current directory"
          pwd
          ls -l
          ansible-playbook -i inventory \
          provision-pool-play.yml \
          -e kubeadmin_user=${params.hive_admin} \
          -e kubeadmin_password=${params.hive_admin_password} \
          -e ocp_api_url=${params.hive_api_url} \
          -e pool_name=${params.pool_name} \
          -e pool_namespace=${params.pool_namespace} \
          -e pool_size=${params.pool_size} \
          -e admin_task=${params.pool_task} \
          -e cloud=${params.pool_cloud} \
          -e BASE_DOMAIN=${params.pool_basedomain} \
          -e aws_access_key=${params.aws_access_key} \
          -e aws_secret_key=${params.aws_secret_key} \
          -e AWS_REGION=${params.AWS_REGION} \
          -e WORKER_COUNT=${params.WORKER_COUNT} \
          -e WORKER_VM_SIZE=${params.WORKER_VM_SIZE} \
          -e WORKER_VOLUME_SIZE=${params.WORKER_VOLUME_SIZE} \
          -e MASTER_VM_SIZE=${params.MASTER_VOLUME_SIZE} \
          -e MASTER_VOLUME_SIZE=${params.MASTER_VOLUME_SIZE} \
          -e PULL_SECRET='${params.pull_secret}' \
          -e SSH_PUBLIC_KEY='${params.ssh_public}'  -vv
        """.stripIndent()
      }
   }
  }
}
